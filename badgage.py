#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.17
# In conjunction with Tcl version 8.6
#    Nov 13, 2018 06:13:47 PM CET  platform: Windows NT

import sys
from serial import *
import threading
import csv

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

recording = False
list_data = []

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    top = New_Toplevel (root)
    root.mainloop()

w = None
def create_New_Toplevel(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = New_Toplevel (w)
    return (w, top)

def destroy_New_Toplevel():
    global w
    w.destroy()
    w = None

class New_Toplevel:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#d9d9d9' # X11 color: 'gray85'

        top.geometry("600x450+790+141")
        top.title("New Toplevel")
        top.configure(background="#d9d9d9")

        self.prenom_entry = Entry(top)
        self.prenom_entry.place(relx=0.067, rely=0.156, height=20
                , relwidth=0.307)
        self.prenom_entry.configure(background="white")
        self.prenom_entry.configure(disabledforeground="#a3a3a3")
        self.prenom_entry.configure(font="TkFixedFont")
        self.prenom_entry.configure(foreground="#000000")
        self.prenom_entry.configure(insertbackground="black")
        self.prenom_entry.configure(width=184)

        self.prenom = Label(top)
        self.prenom.place(relx=0.083, rely=0.089, height=21, width=164)
        self.prenom.configure(background="#d9d9d9")
        self.prenom.configure(disabledforeground="#a3a3a3")
        self.prenom.configure(foreground="#000000")
        self.prenom.configure(text='''Prenom''')
        self.prenom.configure(width=164)

        self.nom_entry = Entry(top)
        self.nom_entry.place(relx=0.533, rely=0.156,height=20, relwidth=0.34)
        self.nom_entry.configure(background="white")
        self.nom_entry.configure(disabledforeground="#a3a3a3")
        self.nom_entry.configure(font="TkFixedFont")
        self.nom_entry.configure(foreground="#000000")
        self.nom_entry.configure(insertbackground="black")
        self.nom_entry.configure(width=204)

        self.nom = Label(top)
        self.nom.place(relx=0.617, rely=0.089, height=21, width=114)
        self.nom.configure(background="#d9d9d9")
        self.nom.configure(disabledforeground="#a3a3a3")
        self.nom.configure(foreground="#000000")
        self.nom.configure(text='''NOM''')
        self.nom.configure(width=114)

        self.Message1 = Message(top)
        self.Message1.place(relx=0.35, rely=0.444, relheight=0.229, relwidth=0.467)
        self.Message1.configure(background="#d9d9d9")
        self.Message1.configure(foreground="#000000")
        self.Message1.configure(highlightbackground="#d9d9d9")
        self.Message1.configure(highlightcolor="black")
        self.Message1.configure(text='''ID BADGE A VENIR ICI''')
        self.Message1.configure(width=300)

        self.badge_annonce = Label(top)
        self.badge_annonce.place(relx=0.333, rely=0.356, height=31, width=144)
        self.badge_annonce.configure(background="#d9d9d9")
        self.badge_annonce.configure(disabledforeground="#a3a3a3")
        self.badge_annonce.configure(foreground="#000000")
        self.badge_annonce.configure(text='''BADGE NUMERO :''')
        self.badge_annonce.configure(width=144)

        self.badge_button = Button(top, command=self.badgeur)
        self.badge_button.place(relx=0.083, rely=0.4, height=54, width=87)
        self.badge_button.configure(activebackground="#d9d9d9")
        self.badge_button.configure(activeforeground="#000000")
        self.badge_button.configure(background="#d9d9d9")
        self.badge_button.configure(disabledforeground="#a3a3a3")
        self.badge_button.configure(foreground="#000000")
        self.badge_button.configure(highlightbackground="#d9d9d9")
        self.badge_button.configure(highlightcolor="black")
        self.badge_button.configure(pady="0")
        self.badge_button.configure(text='''BADGE''')
        self.badge_button.configure(width=87)

    def badgeur(self):
        #global recording
        #recording = True
        if serial_port.isOpen():
            data = serial_port.readline()
        list_data.append(data)
        list_data.append(self.prenom_entry.get())
        list_data.append(self.nom_entry.get())
        #print(list_data)
        c.writerow(list_data)
        self.Message1["text"] = list_data[0]
        list_data.pop()
        list_data.pop()
        list_data.pop()

class MyThread(threading.Thread):
    def run(self):
        global recording
        while True:
            if len(list_data) == 3:
                #c.writerow(list_data)
                pass

if __name__ == '__main__':
    serial_port = Serial(port="COM17", baudrate=4800) # port à régler (/ttyUSBX(linux) ou COMX(windows) )
    file = open("./data/liste.csv",'wb')
    c = csv.writer(file)
    vp_start_gui()


